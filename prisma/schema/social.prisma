// model Group {
//   id        String   @id @default(cuid())
//   name      String
//   //
//   createdAt DateTime @default(now())
//   updatedAt DateTime @default(now()) @updatedAt
//   //
//   members   User[]
//   posts     Post[]
// }

model Post {
  id           String         @id @default(cuid())
  //
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  // //
  // group        Group          @relation(fields: [groupId], references: [id], onDelete: Cascade)
  // groupId      String
  //
  content      String
  //
  likes        User[]         @relation("LikeRelation")
  comments     Post[]         @relation("CommentRelation")
  //
  parent       Post?          @relation("CommentRelation", fields: [parentId], references: [id])
  parentId     String?
  // 
  versions     PostVersion[]
  //
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  mostRecent   DateTime       @default(now())
  notification Notification[]
  //
  triggerPost  Notification[] @relation("TriggerPost")

  //
  @@map("post")
}

model PostVersion {
  id        String   @id @default(cuid())
  //
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  //
  content   String
  //
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  //
  @@map("post_version")
}